{"ast":null,"code":"import React from'react';import'./CatItem.css';import{useCatUpdate}from'../../contexts.js';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function CatItem(props){var cats=JSON.parse(localStorage.getItem(\"cats\"));var index=cats.findIndex(function(cat){return cat.id==props.id;});//set img background to pic url\nvar picStyle={backgroundImage:\"url(\".concat(props.thumbnail_url,\")\")};var select=useCatUpdate();//passes clicked component's props to state and increases click count\nfunction handleClick(){cats[index].views_count+=1;var catsNew=JSON.stringify(cats);localStorage.setItem(\"cats\",catsNew);select(props);}function isValidDate(date){return new Date(date)!==\"Invalid Date\"&&!isNaN(new Date(date));}var formattedDate;//validate and format date\nif(isValidDate(props.birthdate)){var d=new Date(props.birthdate);var months=[\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"];var day=d.getDate();var month=months[d.getMonth()];var year=d.getFullYear();formattedDate=day+\" \"+month+\" \"+year;}else{formattedDate=\"Ageless...or invalid birthday\";}return/*#__PURE__*/_jsxs(\"div\",{onClick:handleClick,className:\"CatItem\",\"data-testid\":\"CatItem\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"catItemPicWrapper\",children:/*#__PURE__*/_jsx(\"div\",{className:\"catItemPic\",style:picStyle})}),/*#__PURE__*/_jsx(\"div\",{className:\"catName\",\"data-testid\":\"CatItemName\",children:props.name}),/*#__PURE__*/_jsx(\"div\",{className:\"catBday\",\"data-testid\":\"CatItemDate\",children:formattedDate})]});}export default CatItem;","map":{"version":3,"sources":["/Users/johnculbreth/Documents/GitHub/react-catfacts/src/components/CatItem/CatItem.js"],"names":["React","useCatUpdate","CatItem","props","cats","JSON","parse","localStorage","getItem","index","findIndex","cat","id","picStyle","backgroundImage","thumbnail_url","select","handleClick","views_count","catsNew","stringify","setItem","isValidDate","date","Date","isNaN","formattedDate","birthdate","d","months","day","getDate","month","getMonth","year","getFullYear","name"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAO,eAAP,CACA,OAASC,YAAT,KAA6B,mBAA7B,C,wFAIA,QAASC,CAAAA,OAAT,CAAiBC,KAAjB,CAAwB,CACtB,GAAIC,CAAAA,IAAI,CAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAX,CAEA,GAAIC,CAAAA,KAAK,CAAGL,IAAI,CAACM,SAAL,CAAe,SAAAC,GAAG,QAAIA,CAAAA,GAAG,CAACC,EAAJ,EAAUT,KAAK,CAACS,EAApB,EAAlB,CAAZ,CAEA;AACA,GAAIC,CAAAA,QAAQ,CAAG,CAAEC,eAAe,eAASX,KAAK,CAACY,aAAf,KAAjB,CAAf,CACA,GAAMC,CAAAA,MAAM,CAAGf,YAAY,EAA3B,CAEA;AACA,QAASgB,CAAAA,WAAT,EAAuB,CACrBb,IAAI,CAACK,KAAD,CAAJ,CAAYS,WAAZ,EAA2B,CAA3B,CACA,GAAIC,CAAAA,OAAO,CAAGd,IAAI,CAACe,SAAL,CAAehB,IAAf,CAAd,CACAG,YAAY,CAACc,OAAb,CAAqB,MAArB,CAA6BF,OAA7B,EACAH,MAAM,CAACb,KAAD,CAAN,CACD,CAED,QAASmB,CAAAA,WAAT,CAAqBC,IAArB,CAA2B,CACzB,MAAQ,IAAIC,CAAAA,IAAJ,CAASD,IAAT,IAAmB,cAApB,EAAuC,CAACE,KAAK,CAAC,GAAID,CAAAA,IAAJ,CAASD,IAAT,CAAD,CAApD,CACD,CAED,GAAIG,CAAAA,aAAJ,CAEA;AACA,GAAIJ,WAAW,CAACnB,KAAK,CAACwB,SAAP,CAAf,CAAkC,CAChC,GAAIC,CAAAA,CAAC,CAAG,GAAIJ,CAAAA,IAAJ,CAASrB,KAAK,CAACwB,SAAf,CAAR,CACA,GAAIE,CAAAA,MAAM,CAAG,CAAC,KAAD,CAAQ,KAAR,CAAe,KAAf,CAAsB,KAAtB,CAA6B,KAA7B,CAAoC,KAApC,CAA2C,KAA3C,CAAkD,KAAlD,CAAyD,KAAzD,CAAgE,KAAhE,CAAuE,KAAvE,CAA8E,KAA9E,CAAb,CACA,GAAIC,CAAAA,GAAG,CAAGF,CAAC,CAACG,OAAF,EAAV,CACA,GAAIC,CAAAA,KAAK,CAAGH,MAAM,CAACD,CAAC,CAACK,QAAF,EAAD,CAAlB,CACA,GAAIC,CAAAA,IAAI,CAAGN,CAAC,CAACO,WAAF,EAAX,CACAT,aAAa,CAAGI,GAAG,CAAG,GAAN,CAAYE,KAAZ,CAAoB,GAApB,CAA0BE,IAA1C,CACD,CAPD,IAQK,CACHR,aAAa,CAAG,+BAAhB,CACD,CAED,mBAEE,aAAK,OAAO,CAAET,WAAd,CAA2B,SAAS,CAAC,SAArC,CAA+C,cAAY,SAA3D,wBACE,YAAK,SAAS,CAAC,mBAAf,uBACE,YAAK,SAAS,CAAC,YAAf,CAA4B,KAAK,CAAEJ,QAAnC,EADF,EADF,cAIE,YAAK,SAAS,CAAC,SAAf,CAAyB,cAAY,aAArC,UAAoDV,KAAK,CAACiC,IAA1D,EAJF,cAKE,YAAK,SAAS,CAAC,SAAf,CAAyB,cAAY,aAArC,UAAoDV,aAApD,EALF,GAFF,CAWD,CAED,cAAexB,CAAAA,OAAf","sourcesContent":["import React from 'react';\nimport './CatItem.css';\nimport { useCatUpdate } from '../../contexts.js'\n\n\n\nfunction CatItem(props) {\n  let cats = JSON.parse(localStorage.getItem(\"cats\"));\n\n  let index = cats.findIndex(cat => cat.id == props.id);\n\n  //set img background to pic url\n  let picStyle = { backgroundImage: `url(${props.thumbnail_url})` };\n  const select = useCatUpdate();\n\n  //passes clicked component's props to state and increases click count\n  function handleClick() {\n    cats[index].views_count += 1;\n    let catsNew = JSON.stringify(cats);\n    localStorage.setItem(\"cats\", catsNew);\n    select(props);\n  }\n\n  function isValidDate(date) {\n    return (new Date(date) !== \"Invalid Date\") && !isNaN(new Date(date));\n  }\n\n  let formattedDate;\n\n  //validate and format date\n  if (isValidDate(props.birthdate)) {\n    let d = new Date(props.birthdate);\n    let months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n    let day = d.getDate()\n    let month = months[d.getMonth()]\n    let year = d.getFullYear();\n    formattedDate = day + \" \" + month + \" \" + year;\n  }\n  else {\n    formattedDate = \"Ageless...or invalid birthday\";\n  }\n\n  return (\n\n    <div onClick={handleClick} className=\"CatItem\" data-testid=\"CatItem\">\n      <div className=\"catItemPicWrapper\">\n        <div className=\"catItemPic\" style={picStyle}></div>\n      </div>\n      <div className=\"catName\" data-testid=\"CatItemName\">{props.name}</div>\n      <div className=\"catBday\" data-testid=\"CatItemDate\">{formattedDate}</div>\n    </div>\n\n  )\n}\n\nexport default CatItem;\n"]},"metadata":{},"sourceType":"module"}